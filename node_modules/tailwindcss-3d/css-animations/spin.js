"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "spin", {
    enumerable: true,
    get: function() {
        return spin;
    }
});
var _lodash = /*#__PURE__*/ _interopRequireDefault(require("lodash"));
var _generateGuard = require("../utils/generate-guard");
var _cssValue = require("../utils/css-value");
var _defaultTheme = /*#__PURE__*/ _interopRequireDefault(require("tailwindcss/defaultTheme"));
var _transform = require("../css-utilities/transform");
var _lodashTransformers = require("../utils/lodash-transformers");
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _objectSpread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _defineProperty(target, key, source[key]);
        });
    }
    return target;
}
var Spin = function Spin() {
    "use strict";
    var _this = this;
    _classCallCheck(this, Spin);
    this.isProcessableValue = (0, _generateGuard.generateGuard)(_lodash.default.isString, _lodash.default.isUndefined);
    this.isProcessableValues = (0, _generateGuard.generateGuard)([
        _lodash.default.isPlainObject,
        function(maybe) {
            return _lodash.default.every(_lodash.default.keys(maybe), _lodash.default.isString);
        },
        function(maybe) {
            return _lodash.default.every(_lodash.default.values(maybe), _this.isProcessableValue);
        }
    ]);
    this.isValues = (0, _generateGuard.generateGuard)([
        _lodash.default.isPlainObject,
        function(maybe) {
            return _lodash.default.every(_lodash.default.keys(maybe), _lodash.default.isString);
        },
        function(maybe) {
            return _lodash.default.every(_lodash.default.values(maybe), _lodash.default.isString);
        }
    ]);
    var _normaliseNumberValue;
    this.normaliseValues = function(values) {
        return _this.isProcessableValues(values) ? _lodash.default.chain(values).mapKeys(function(_duration, modifier) {
            return (_normaliseNumberValue = (0, _cssValue.normaliseNumberValue)(modifier)) !== null && _normaliseNumberValue !== void 0 ? _normaliseNumberValue : "";
        }).mapValues(function(duration) {
            return (0, _cssValue.normaliseTimeValue)(duration);
        }).pickBy(function(duration, modifier) {
            return _lodash.default.isString(modifier) && modifier !== "" && _lodash.default.isString(duration);
        }).value() : {};
    };
    this.defaultTheme = this.normaliseValues(_lodash.default.mapValues(_defaultTheme.default.spacing, function(_spacing, modifier) {
        return "".concat(modifier, "s");
    }));
    this.xyKeyframes = function() {
        return _lodash.default.chain({
            "1": ""
        }).transform((0, _lodashTransformers.axesModifier)([
            "x",
            "y"
        ]), {}).transform((0, _lodashTransformers.nameModifier)("spin"), {}).transform((0, _lodashTransformers.signModifier)(), {}).mapValues(function(param) {
            var axis = param.axis, sign = param.sign;
            var rotateProperty = "rotate".concat(axis.toUpperCase());
            return {
                from: {
                    transform: _transform.transform.normaliseFunctionValues(_defineProperty({}, rotateProperty, "0deg"))
                },
                to: {
                    transform: _transform.transform.normaliseFunctionValues(_defineProperty({}, rotateProperty, "".concat(sign, "360deg")))
                }
            };
        }).value();
    };
    this.zKeyframes = function() {
        return _lodash.default.chain({
            "1": ""
        }).transform((0, _lodashTransformers.axesModifier)("z"), {}).transform((0, _lodashTransformers.nameModifier)("spin"), {}).transform((0, _lodashTransformers.signModifier)(), {}).mapValues(function(param) {
            var sign = param.sign;
            return {
                from: {
                    rotate: "0deg"
                },
                to: {
                    rotate: "".concat(sign, "360deg")
                }
            };
        }).value();
    };
    this.keyframes = function() {
        return _objectSpread({}, _this.xyKeyframes(), _this.zKeyframes());
    };
    this.animation = function(param) {
        var theme = param.theme;
        var values = _this.normaliseValues(theme("spin"));
        return _lodash.default.chain(values).transform((0, _lodashTransformers.axesModifier)(), {}).transform((0, _lodashTransformers.nameModifier)("spin"), {}).transform((0, _lodashTransformers.signModifier)(), {}).mapValues(function(param) {
            var value = param.value, axis = param.axis, name = param.name, sign = param.sign;
            return "".concat(sign).concat(name, "-").concat(axis, " ").concat(value, " linear infinite");
        }).value();
    };
};
var spin = new Spin();
